services:
  app:
    build: .
    ports:
      - "8080:8080"
    depends_on:
      migrations:
        condition: service_completed_successfully
    environment:
      - PORT=8080
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/rssagg?sslmode=disable
      - JWT_SECRET=${JWT_SECRET}
      - HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USERNAME=${EMAIL_USERNAME}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - EMAIL_FROM_NAME=${EMAIL_FROM_NAME}
      - EMAIL_FROM_ADDRESS=${EMAIL_FROM_ADDRESS}
    restart: unless-stopped

  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=rssagg
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrations:
    image: golang:1.23-alpine
    volumes:
      - .:/app
    working_dir: /app
    command: sh -c "sleep 3 && go run migrations.go || exit 1"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/rssagg?sslmode=disable

volumes:
  postgres_data:
